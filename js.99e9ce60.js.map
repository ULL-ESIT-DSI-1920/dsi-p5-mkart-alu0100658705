{"version":3,"sources":["js/KartPlayer.js","js/index.js"],"names":["KartPlayer","HTMLElement","name","config","attachShadow","mode","image","y","x","opacidad","b","power","create_power","power_selected","active","render","shadowRoot","innerHTML","styles","road","appendChild","object","powerUp","velocidad","Math","floor","random","length","act","Object","array","entries","powerups","push","customElements","define","startButton","document","querySelector","restartButton","karts","timer","incremento","players","kart","addToRoad","startRace","setInterval","startIteration","disabled","endRace","clearInterval","forEach","isWinner","win","lose","restartRace","restart","inc","some","onclick"],"mappings":"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","file":"js.99e9ce60.js","sourceRoot":"../src","sourcesContent":["import powerups from \"../assets/images/champ-*.png\";\nexport class KartPlayer extends HTMLElement {\n  constructor(name, config) {\n    super();\n    this.attachShadow({\n      mode: \"open\"\n    });\n    this.name = name;\n    this.image = config.image;\n    this.y = config.y;\n    this.x = 0;\n    this.opacidad = 1;\n    this.b = -1;\n    this.power = this.create_power();\n    this.power_selected = \"\";\n    this.active = 0;\n  }\n\n  connectedCallback() {\n    this.render();\n  }\n\n  get styles() {\n    return `\n    :host {\n      --x: ${this.x}px;\n      position: absolute;\n      display: inline-block;\n      top: ${this.y}px;\n      transform: translateX(var(--x));\n      transition: transform 0.35s;\n      will-change: transform;\n    }\n    #powerup {\n      display: block;\n      opacity: ${this.active};\n      top: 1px;\n      left: 10px;\n      position:relative;\n    }\n    #avatar{\n      opacity: ${this.opacidad};\n      -webkit-filter: drop-shadow(${this.b}px  ${this.b}px  0 gold)\n                      drop-shadow(-${this.b}px  -${this.b}px 0 gold);\n      filter: drop-shadow(${this.b}px  ${this.b}px  0 gold) \n          drop-shadow(-${this.b}px) -${this.b}px 0 gold);\n     }\n   `;\n  }\n\n  render() {\n    this.shadowRoot.innerHTML = `\n        <style>${this.styles}</style>\n        <img id=\"powerup\" src=\"${this.power_selected}\" width=64 heigt=64>\n        <img id=\"avatar\" src=\"${this.image}\" alt=\"${this.name}\" width=128 height=128>\n      `;\n  }\n\n  addToRoad(road) {\n    road.appendChild(this);\n  }\n\n  inc() {\n    if (this.object() == 1) {\n      this.x += this.powerUp();\n      this.active = 1;\n      if (this.powerUp() == 100) {\n        this.power_selected = this.power[0];\n      } else if (this.powerUp() == 50) {\n        this.power_selected = this.power[2];\n      } else {\n        this.power_selected = this.power[1];\n      }\n    } else {\n      this.active = 0;\n      this.x += 20;\n    }\n    this.render();\n  }\n\n  powerUp() {\n    var velocidad = [100, 50, 0];\n    return velocidad[Math.floor(Math.random() * velocidad.length)];\n  }\n\n  object() {\n    var act = [0, 0, 1]\n    return act[Math.floor(Math.random() * act.length)]\n  }\n\n  win() {\n    this.b = 5;\n    this.active = 0;\n    this.render();\n  }\n\n  lose() {\n    this.opacidad = 0.5;\n    this.active = 0;\n    this.render();\n  }\n\n  isWinner() {\n    if (this.x >= 950) {\n      return true;\n    }\n  }\n\n  restart() {\n    this.x = 0;\n    this.opacidad = 1;\n    this.b = -1;\n    this.render();\n  }\n\n  create_power() {\n    var array = []\n    for (const [name, image] of Object.entries(powerups)) {\n      array.push(image);\n    }\n    return array;\n  }\n}\n\ncustomElements.define(\"kart-player\", KartPlayer);","import players from \"../assets/images/kart-*.png\";\nimport {\n  KartPlayer\n} from \"./KartPlayer.js\";\n\nconst startButton = document.querySelector(\".start\");\nconst restartButton = document.querySelector(\".restart\");\nconst road = document.querySelector(\".road\");\nconst karts = [];\nlet timer = null;\nlet incremento = 0;\n\nfor (const [name, image] of Object.entries(players)) {\n  const config = {\n    image: image,\n    y: (karts.length = incremento)\n  };\n  const kart = new KartPlayer(name, config);\n  kart.addToRoad(road);\n  karts.push(kart);\n  incremento += 75;\n}\n\nconst startRace = () => {\n  timer = setInterval(() => startIteration(), 1000 / 2);\n  startButton.disabled = true;\n  restartButton.disabled = true;\n};\n\nconst endRace = () => {\n  clearInterval(timer);\n  karts.forEach(kart => (kart.isWinner() ? kart.win() : kart.lose()));\n  restartButton.disabled = false;\n};\n\nconst restartRace = () => {\n  karts.forEach(kart => kart.restart());\n  startButton.disabled = false;\n};\n\nconst startIteration = () => {\n  karts.forEach(kart => kart.inc());\n  if (karts.some(kart => kart.isWinner())) endRace();\n};\n\nstartButton.onclick = () => startRace();\nrestartButton.onclick = () => restartRace();"]}